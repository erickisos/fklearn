[tool.poetry]
name = "fklearn"
version = "2.1.0"
description = "Functional machine learning"
authors = ["Nubank"]
repository = "https://github.com/nubank/fklearn"
documentation = "https://fklearn.readthedocs.io/en/latest/"
classifiers = ["Programming Language :: Python :: 3.6"]
packages = [
  { include = "fklearn", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.6.2"
joblib = ">=0.13.2,<2"
numpy = "^1.16.4"
pandas = ">=0.24.1,<2"
scikit-learn = ">=0.21.2,<0.24.0"
statsmodels = "^0.9.0"
toolz = "^0.9.0"

lightgbm = { version = ">=2.2.2,<4", optional = true }
xgboost = { version = ">=0.82,<1.5", optional = true }
catboost = { version = ">=0.14.2,<2", optional = true }
shap = { version = ">=0.31.0,<=0.40", optional = true }
swifter = { version = ">=0.284,<2", optional = true }
matplotlib = { version = "^3.0.2", optional = true }
tqdm = { version = "^4.32.1", optional = true }
scipy = { version = "^1.2.1", optional = true }
nbsphinx = { version = ">=0.4.2,<1", optional = true }
Sphinx = { version = ">=1.7.1,<2", optional = true }
sphinx-rtd-theme = { version = ">=0.4.3,<1", optional = true }

[tool.poetry.extras]
docs = ["nbsphinx", "Sphinx", "sphinx-rtd-theme"]
lgbm = ["lightgbm"]
xgboost = ["xgboost"]
catboost = ["catboost"]
tools = ["shap", "swifter"]
demos = ["matplotlib", "tqdm", "scipy"]
all_models = ["lightgbm", "xgboost", "catboost"]
all = ["lgbm", "xgboost", "catboost", "shap", "swifter", "matplotlib", "tqdm", "scipy", "nbsphinx", "Sphinx", "sphinx-rtd-theme"]

[tool.poetry.dev-dependencies]
tox = "^3.24.5"
bandit = "^1.7.1"
flake8 = "^4.0.1"
isort = "^5.10.1"
pytest = ">=4.2.1,<7"
pytest-cov = ">=2.6.1,<3"
pytest-xdist = ">=1.26.1,<3"
mypy = ">=0.670,<1"
codecov = ">=2.0,<3"
hypothesis = ">= 5.5.4,<7"
pre-commit = "^2.17.0"
autopep8 = "^1.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
build-editable = true

[tools.mypy]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fklearn.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "fklearn.metrics.pd_extractors.*"
ignore_errors = true

[tool.pytest.ini_options]
adopts = "-l --color=yes"
