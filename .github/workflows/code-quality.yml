name: Code Quality Checks

on:
  push:
    branches-ignore:
      - "master"
jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Restoring cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry update
      - name: Check code style
        run: poetry run flake8 src tests
  test:
    name: Run tests
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Restoring cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry update
      - name: Run tests
        run: poetry run tox
  type-check:
    name: Mypy check
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Restoring cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry update
      - name: Run type checking
        run: poetry run mypy src tests
  pip-check:
    name: Pip check
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Restoring cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry update
      - name: Run pip check
        run: poetry run pip check
  build-docs:
    name: Build documentation
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Restoring cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-root -E docs
      - name: Install Pandoc
        run: sudo apt-get install -y -qq pandoc
      - name: Build documentation
        run: cd docs/ && make html
