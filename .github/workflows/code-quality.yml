name: code-quality

on:
  push:
    branches-ignore:
      - "master"
jobs:
  install-deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Restoring cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install -E all
      - name: Store build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dependencies
          path: ~/.cache/pypoetry/virtualenvs
  lint:
    name: Linter
    needs:
      - "install-deps"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dependencies artifact
        uses: actions/download-artifact@v2
        with:
          name: dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Check code style
        run: poetry run flake8 src tests
  test:
    name: Run tests
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dependencies artifact
        uses: actions/download-artifact@v2
        with:
          name: dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Run tests
        run: poetry run tox
  type-check:
    name: Mypy check
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dependencies artifact
        uses: actions/download-artifact@v2
        with:
          name: dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Run type checking
        run: poetry run mypy src tests
  pip-check:
    name: Pip check
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dependencies artifact
        uses: actions/download-artifact@v2
        with:
          name: dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Run pip check
        run: poetry run pip check
  build-docs:
    name: Build documentation
    needs:
      - "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dependencies artifact
        uses: actions/download-artifact@v2
        with:
          name: dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: x64
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Install Pandoc
        run: sudo apt-get install -y -qq pandoc
      - name: Build documentation
        run: |
          cd docs/
          poetry run sphinx-build -b html source build
